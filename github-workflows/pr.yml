# this_file: .github/workflows/pr.yml

name: Pull Request

on:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  pr-check:
    name: Pull Request Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-pr-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Check for version consistency
      run: |
        # Check if version in Cargo.toml is consistent with the latest tag
        CARGO_VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d'"' -f2)
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        LATEST_VERSION=${LATEST_TAG#v}
        
        echo "Cargo.toml version: $CARGO_VERSION"
        echo "Latest tag version: $LATEST_VERSION"
        
        # Only warn if versions are different (don't fail the PR)
        if [ "$CARGO_VERSION" != "$LATEST_VERSION" ]; then
          echo "⚠️  Warning: Version in Cargo.toml ($CARGO_VERSION) differs from latest tag ($LATEST_VERSION)"
        fi
    
    - name: Test build scripts
      run: |
        chmod +x scripts/*.sh
        ./scripts/build.sh
        ./scripts/test.sh --no-coverage
    
    - name: Check documentation builds
      run: cargo doc --all-features --no-deps
    
    - name: Run security audit
      run: |
        cargo install cargo-audit
        cargo audit